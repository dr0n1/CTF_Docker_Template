name: Publish template to Github Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RELEASE_TAG: "single-template"
  RELEASE_NAME: "单个模板下载"

jobs:
  deploy:
    name: Zip & Publish 单个模板下载
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Zip each top‑level folder
        run: |
          rm -rf release
          mkdir -p release
          for dir in */ ; do
            if [[ -d "$dir" && "${dir:0:1}" != "." && "${dir%/}" != "release" ]]; then
              name="${dir%/}"
              echo "→ Zipping folder: $name"
              zip -rq "release/${name}.zip" "$dir"
            fi
          done

      - name: Delete all existing assets from the Release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = process.env.RELEASE_TAG;
            // 获取 Release（若不存在，则跳过删除）
            const resp = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            }).catch(() => null);
            if (!resp) {
              core.info(`No existing Release with tag '${tag}', skip asset deletion.`);
              return;
            }
            const release = resp.data;
            // 删除所有 asset
            for (const asset of release.assets) {
              core.info(`Deleting asset: ${asset.name}`);
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              });
            }

      - name: Create/Update Release & upload ZIPs
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_NAME }}
          body: |
            自动打包发布：包含项目根目录下所有子文件夹的 ZIP 压缩包。
          allowUpdates: true
          replacesArtifacts: true
          artifactErrorsFailBuild: true
          artifacts: "release/*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
